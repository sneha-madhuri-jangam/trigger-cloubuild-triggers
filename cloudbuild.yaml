# cloudbuild.yaml
#
# This Cloud Build configuration will:
# 1. Build your Docker image for the React application.
# 2. Tag the image with 'latest' and a unique commit SHA.
# 3. Push the tagged images to your specified Artifact Registry repository.
# 4. Deploy the latest image to a Cloud Run service.
#
# Project ID: sublime-state-464613-s9
# Region: us-central1
# Artifact Registry Repo: react-app-repo
# Image Name: my-react-app-service

steps:
    # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'us-central1-docker.pkg.dev/sublime-state-464613-s9/react-app-repo/my-react-app-service:latest'
      - '-t'
      - 'us-central1-docker.pkg.dev/sublime-state-464613-s9/react-app-repo/my-react-app-service:$COMMIT_SHA'
      - '.'

  # Step 2: Push the image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: Push-to-AR
    args:
      - 'push'
      - '--all-tags'
      - 'us-central1-docker.pkg.dev/sublime-state-464613-s9/react-app-repo/my-react-app-service'

  # Step 3: Deploy the image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'my-react-app-service'
      - '--image'
      - 'us-central1-docker.pkg.dev/sublime-state-464613-s9/react-app-repo/my-react-app-service:latest'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'

# Images to push after successful build (optional but recommended)
images:
  - 'us-central1-docker.pkg.dev/sublime-state-464613-s9/react-app-repo/my-react-app-service:latest'
  - 'us-central1-docker.pkg.dev/sublime-state-464613-s9/react-app-repo/my-react-app-service:$COMMIT_SHA'
# Add this entire options block at the end of your file
options:
  logging: CLOUD_LOGGING_ONLY